{"version":3,"sources":["Images/spinner.gif","components/Layout/navbar.jsx","components/repos/repoItem.jsx","components/repos/repos.jsx","context/github/GithubState.jsx","components/Layout/spinner.jsx","context/github/githubContext.jsx","components/Users/user.jsx","context/Alert/alertContext.jsx","components/Layout/alert.jsx","components/Pages/about.jsx","context/github/githubReducer.jsx","context/types.jsx","context/Alert/alertReducer.jsx","context/Alert/AlertState.jsx","components/Users/search.jsx","components/Users/userItem.jsx","components/Users/Users.jsx","components/Pages/Home.jsx","components/Pages/NotFound.jsx","components/App.js","index.js"],"names":["module","exports","Navbar1","icon","title","className","to","defaultProps","RepoItem","repo","href","html_url","name","Repos","repos","map","key","id","proTypes","PropTypes","array","isRequired","githubClientId","githubClientSecret","Spinner","src","spinner","alt","style","width","margin","display","GithubContext","createContext","User","match","githubContext","useContext","user","loading","getUser","getUserRepos","useEffect","params","login","avatar_url","location","bio","blog","followers","following","public_repos","public_gists","hireable","company","alertContext","Alert","alert","AlertContext","type","msg","About","state","action","users","payload","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","useReducer","GithubReducer","dispatch","searchUsers","text","a","setLoading","axios","get","res","console","log","data","items","username","Provider","value","clearUsers","children","AlertState","AlertReducer","setAlert","setTimeout","Search","useState","setText","onSubmit","event","preventDefault","placeholder","onChange","target","length","onClick","UserItem","prototypes","object","userStyle","gridTemplateColumns","gridGap","Users","Home","NotFound","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5230b17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.750fc7f7.gif\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\n\n\nconst Navbar1 = ({ icon, title }) => {\n\n    // const title = 'Github Finder';\n\n    return (\n\n        <nav className=\"navbar bg-primary\">\n            <h1>\n                <i className={icon} /> {title}\n            </h1>\n            <ul>\n                <li>\n                    <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                    <Link to=\"/about\">About</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n\n}\n\nNavbar1.defaultProps = {\n    title: 'Github Finder',\n    icon: 'fa fa-github',\n};\n\nNavbar1.propTypes = {\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n};\n\nexport default Navbar1;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst RepoItem = ({ repo }) => {\n    return (\n        <div>\n            <a href={repo.html_url}>{repo.name}</a>\n        </div>\n    )\n}\nRepoItem.propTypes = {\n    repo: PropTypes.object.isRequired,\n}\nexport default RepoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RepoItem from './repoItem'\n\nconst Repos = ({ repos }) => {\n    return repos.map(repo => <RepoItem repo={repo} key={repo.id}\n    />);\n}\nRepos.proTypes = {\n    repos: PropTypes.array.isRequired,\n}\n\nexport default Repos;\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n    SEARCH_USERS,\n    SET_LOADING,\n    CLEAR_USERS,\n    GET_REPOS,\n    GET_USER\n} from '../types';\n\n// preparing the app to deploy it:\n\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n    githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n    githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n    githubClientId = process.env.GITHUB_CLIENT_ID;\n    githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n};\n/* ###########################################*/\n\nconst GithubState = props => {\n    const initialState = {\n        users: [],\n        user: [],\n        repos: [],\n        loading: false,\n    }\n\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n    // search users\n\n    // to find Github users according to the text entered.\n    const searchUsers = async text => {\n\n        setLoading();\n\n        const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`)\n        console.log(res.data.items);\n\n        dispatch({ type: SEARCH_USERS, payload: res.data.items });\n    }\n\n    // get user\n    // Get a single Github users info\n\n    const getUser = async username => {\n\n        setLoading();\n\n        const res = await axios.get(`https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`)\n        console.log(res.data.items);\n\n        dispatch({ type: GET_USER, payload: res.data });\n    }\n\n    // get repos\n    // Get users repos\n    const getUserRepos = async (username) => {\n\n        setLoading();\n\n        const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`)\n        console.log(res.data.items);\n\n        dispatch({ type: GET_REPOS, payload: res.data });\n\n    }\n\n    // clear users\n    // to clear searched users from state\n    const clearUsers = () => ({ type: CLEAR_USERS });\n\n    // set loading\n    const setLoading = () => dispatch({ type: SET_LOADING });\n\n\n    return <GithubContext.Provider value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        searchUsers,\n        clearUsers,\n        getUser,\n        getUserRepos,\n    }}>\n\n        {props.children}\n\n    </GithubContext.Provider>\n}\n\nexport default GithubState;","import React, { Fragment } from 'react';\nimport spinner from '../../Images/spinner.gif'\n\nconst Spinner = () => {\n    return (\n        <Fragment>\n            <img src={spinner} alt=\"Loading ....\"\n                style={{\n                    width: '200px', margin: 'auto',\n                    display: 'block'\n                }} />\n        </Fragment>\n    )\n}\n\nexport default Spinner;\n","import { createContext } from 'react';\n\nconst GithubContext = createContext();\n\n\n\nexport default GithubContext;","import React, { useEffect, Fragment, useContext } from 'react';\nimport Repos from '../repos/repos';\nimport Spinner from '../Layout/spinner';\nimport { Link } from 'react-router-dom';\nimport GithubContext from '../../context/github/githubContext';\n\n\n\nconst User = ({ match }) => {\n    const githubContext = useContext(GithubContext);\n\n\n    const { user, loading, getUser, getUserRepos,\n        repos } = githubContext;\n\n    useEffect(() => {\n        getUser(match.params.login);\n        getUserRepos(match.params.login);\n        //eslint-disable-next-line\n    }, []);\n\n\n    const {\n        name,\n        avatar_url,\n        location,\n        bio,\n        blog,\n        login,\n        html_url,\n        followers,\n        following,\n        public_repos,\n        public_gists,\n        hireable,\n        company,\n    } = user;\n\n\n\n    if (loading) {\n        return <Spinner />\n    }\n    return (\n        <Fragment>\n            <Link to='/' className='btn btn-light'>\n                Back To Search\n                </Link>\n                Hireable: {' '}\n            {hireable ? (<i className='fa fa-check text-success' />) : (<i className='fa fa-times-circle text-danger' />)\n            }\n\n            <div className='card grid-2'>\n                <div className=\"all-center\">\n                    <img\n                        src={avatar_url}\n                        className='round-img'\n                        alt=\"\"\n                        style={{ width: '150px' }}\n                    />\n                    <h1>{name}</h1>\n                    <p>Location: {location}</p>\n\n                </div>\n                <div>\n                    {bio && (<Fragment>\n                        <h3>Bio</h3>\n                        <p>{bio}</p>\n                    </Fragment>\n                    )}\n                    <a href={html_url} className='btn btn-dark my-1'>\n                        Visit Github Profile\n                        </a>\n                    <ul>\n                        <li>\n                            {login && <Fragment>\n                                <strong>Username: </strong> {login}\n                            </Fragment>}\n                        </li>\n\n                        <li>\n                            {company && <Fragment>\n                                <strong>Company: </strong> {company}\n                            </Fragment>}\n                        </li>\n\n                        <li>\n                            {blog && (<Fragment>\n                                <strong>Website: </strong> {blog}\n                            </Fragment>\n                            )}\n                        </li>\n                    </ul>\n                </div>\n\n            </div>\n\n            <div className=\"card text-center\">\n                <div className=\"badge badge-primary\">Followers: {followers}\n                </div>\n                <div className=\"badge badge-success\">Following: {following}\n                </div>\n                <div className=\"badge badge-light\">Public Repos: {public_repos}\n                </div>\n                <div className=\"badge badge-dark\">Public Gists: {public_gists}\n                </div>\n            </div>\n            <Repos repos={repos} />\n        </Fragment>\n    );\n\n}\n\n\n\nexport default User;\n","import { createContext } from 'react';\n\nconst alertContext = createContext();\n\n\n\nexport default alertContext;","import React, { useContext } from 'react';\nimport AlertContext from '../../context/Alert/alertContext';\n\n\nconst Alert = () => {\n    const alertContext = useContext(AlertContext);\n\n\n    const { alert } = alertContext\n    return (\n        alert !== null && (\n            <div className={`alert alert-${alert.type}`}>\n                <i className=\"fa fa-info-circle\"></i> {alert.msg}\n            </div>\n        )\n\n\n    )\n}\n\nexport default Alert;\n","import React, { Fragment } from 'react'\n\nconst About = () => {\n    return (\n        <Fragment>\n            <h1>About This App</h1>\n            <p>App to search Github users</p>\n            <p>Version: 1.0.0</p>\n        </Fragment>\n    )\n}\n\nexport default About;\n","import {\n    SEARCH_USERS,\n    SET_LOADING,\n    CLEAR_USERS,\n    GET_REPOS,\n    GET_USER\n} from '../types';\n\n\nexport default (state, action) => {\n    switch (action.type) {\n        case SEARCH_USERS:\n            return {\n                ...state,\n                users: action.payload,\n                loading: false\n            };\n\n        case GET_USER:\n            return {\n                ...state,\n                user: action.payload,\n                loading: false,\n            }\n\n        case CLEAR_USERS:\n            return {\n                ...state,\n                users: [],\n                loading: false,\n            }\n        case GET_REPOS:\n            return {\n                ...state,\n                repos: action.payload,\n                loading: false,\n            }\n\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n\n\n        default:\n            return state;\n    }\n}","export const SEARCH_USERS = 'SEARCH_USERS';\nexport const GET_USER = 'GET_USER';\nexport const CLEAR_USERS = 'CLEAR_USERS';\nexport const GET_REPOS = 'GET_REPOS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';","import { SET_ALERT, REMOVE_ALERT } from '../types';\n\n\nexport default (state, action) => {\n\n    switch (action.type) {\n        case SET_ALERT:\n            return action.payload;\n\n\n        case REMOVE_ALERT:\n            return null;\n\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer'\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n    const initialState = null;\n\n    const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n\n    // set Alert\n    const setAlert = (msg, type) => { // setting an alert function to display if the input field was submitted empty\n        dispatch({ type: SET_ALERT, payload: { msg, type } })\n\n        // setting a time limit for the displayed alert to disappear.\n        setTimeout(() => dispatch({ type: REMOVE_ALERT }), 5000);\n\n    };\n\n\n    return <AlertContext.Provider value={{\n        alert: state,\n        setAlert,\n\n    }}>\n\n        {props.children}\n\n    </AlertContext.Provider>\n}\n\nexport default AlertState;","import React, { useState, useContext } from 'react';\nimport GithubContext from '../../context/github/githubContext';\nimport AlertContext from '../../context/Alert/alertContext';\n\nconst Search = () => {\n    const githubContext = useContext(GithubContext);\n    const alertContext = useContext(AlertContext);\n\n    const [text, setText] = useState('');\n\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        // setting an alert message should the user submit an empty input\n        if (text === '') {\n            alertContext.setAlert('Please, enter a valid search', 'light')\n        } else {\n            githubContext.searchUsers(text);\n            setText('');\n\n            console.log(text);\n        }\n    };\n\n\n    const onChange = (event) => {\n        setText(event.target.value)\n    }\n\n\n\n    // const { showClear, clearUsers } = this.props;\n    return (\n        <div>\n            <form className=\"form\"\n                onSubmit={onSubmit}>\n                <input type='text'\n                    name='text'\n                    placeholder='Search Users...'\n                    value={text}\n                    onChange={onChange}\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Search\"\n                    className='btn btn-dark btn-block'\n                />\n            </form>\n\n            {githubContext.users.length > 0 && (\n                <button className=\"btn btn-light btn-block\"\n                    onClick={githubContext.clearUsers}>\n                    Clear\n                </button>\n            )}\n\n        </div>\n    )\n\n}\n\n\n\nexport default Search\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nconst UserItem = ({ user: { login, avatar_url, html_url } }) => {\n    /*constructor(props) {\n        super(props);\n        this.state = { // can also be done without the constructor by using just state = {} and the items inside the bracket.\n            id: 'id',\n            login: 'mojombo',\n            avatar_url: 'https://avatars0.githubusercontent.com/u/1?v=4',\n            html_url: 'https://github.com/mojombo',\n        };\n    }*/\n\n\n    return (\n        <div className=\"card text-center\">\n            <img src={avatar_url} alt=\"\" className='round-img' style={{ width: '60px' }} />\n\n            <h3>{login}</h3>\n\n            <div>\n                <Link to={`/user/${login}`} className=\"btn btn-dark btn-sm      my-1\">More\n                </Link>\n            </div>\n\n        </div>\n    )\n\n}\n\nUserItem.prototypes = {\n    user: PropTypes.object.isRequired,\n}\n\nexport default UserItem;\n","import React, { useContext } from 'react';\nimport UserItem from './userItem';\nimport Spinner from '../Layout/spinner';\nimport GithubContext from '../../context/github/githubContext';\n\n\n\nconst Users = () => {\n\n    const githubContext = useContext(GithubContext);\n    // state = {\n    //     users: [\n    //         {\n    //             id: '1',\n    //             login: 'mojombo',\n    //             avatar_url: 'https://avatars0.githubusercontent.com/u/1?v=4',\n    //             html_url: 'https://github.com/mojombo'\n    //         },\n\n    //         {\n    //             id: '2',\n    //             login: 'defunkt',\n    //             avatar_url: 'https://avatars0.githubusercontent.com/u/2?v=4',\n    //             html_url: 'https://github.com/defunkt'\n    //         },\n\n    //         {\n    //             id: '3',\n    //             login: 'pjhyett',\n    //             avatar_url: 'https://avatars0.githubusercontent.com/u/3?v=4',\n    //             html_url: 'https://github.com/pjhyett'\n    //         },\n    //     ]\n    // }\n\n    const { loading, users } = githubContext;\n\n    if (loading) {\n        return < Spinner />\n    } else {\n\n        return (\n            <div style={userStyle}>\n                {users.map(user => (\n                    <UserItem key={user.id} user={user} />\n                ))}\n\n            </div>\n\n\n        );\n\n    }\n\n}\n\nconst userStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gridGap: '1rem',\n};\n\nexport default Users\n","import React, { Fragment } from 'react'\nimport Search from '../Users/search'\nimport Users from '../Users/Users'\n\nconst Home = () => {\n    return (\n        <Fragment>\n\n            <Search />\n            <Users />\n\n        </Fragment>\n    )\n}\n\nexport default Home\n","import React from 'react'\n\nconst NotFound = () => {\n    return (\n        <div>\n            <h1>404 Not Found</h1>\n\n            <p className='lead'>The page you are looking for does not exist....</p>\n        </div>\n    )\n}\n\nexport default NotFound\n","import React from 'react';\nimport '../Styles/App.css';\nimport Navbar1 from './Layout/navbar';\nimport User from './Users/user';\nimport { BrowserRouter as MyRouter, Switch, Route } from 'react-router-dom';\nimport Alert from './Layout/alert';\nimport About from './Pages/about';\nimport GithubState from '../context/github/GithubState';\nimport AlertState from '../context/Alert/AlertState';\nimport Home from './Pages/Home';\nimport NotFound from './Pages/NotFound';\n\n\n\n\n\nconst App = () => {\n\n\n  // async componentDidMount() {\n\n  //   this.setState({ loading: true });\n\n  //   const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n  //   console.log(res.data);\n\n  //   this.setState({ users: res.data, loading: false })\n  // }\n\n\n\n\n\n\n  //const { users, user, loading, repos } = this.state\n\n  return (\n    <GithubState>\n\n      <AlertState>\n\n        <MyRouter>\n\n          <div className=\"App\">\n            <div>\n              <Navbar1 />\n            </div>\n\n            <div className=\"container\">\n              <Alert />\n\n              <Switch>\n\n                <Route exact path='/' component={Home} />\n\n                {/* second router page*/}\n                <Route exact path='/about' component={About} /> {/*exact: is used to make sure that only the exact path is returned */}\n\n                {/* third router page*/}\n                <Route exact path='/user/:login' component={User} />\n                <Route component={NotFound} />\n              </Switch>\n              {/* <About /> */}\n\n            </div>\n          </div>\n\n        </MyRouter>\n      </AlertState>\n    </GithubState>\n\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<React.StrictMode ><App /></React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}