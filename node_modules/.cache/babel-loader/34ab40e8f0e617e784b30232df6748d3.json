{"ast":null,"code":"var _jsxFileName = \"/home/dcil20214/DCI/Online-Courses/Udemy/React-Brad-Traversy/Projects/search-github-functional/src/context/github/GithubState.jsx\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_REPOS, GET_USER } from '../types';\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    users: [],\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); // search users\n  // to find Github users according to the text entered.\n\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    console.log(res.data.items);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; // get user\n  // Get a single Github users info\n\n\n  const getUser = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    console.log(res.data.items);\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  }; // get repos\n  // Get users repos\n\n\n  const getUserRepos = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    console.log(res.data.items);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  }; // clear users\n  // to clear searched users from state\n\n\n  const clearUsers = () => ({\n    type: CLEAR_USERS\n  }); // set loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return /*#__PURE__*/React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/home/dcil20214/DCI/Online-Courses/Udemy/React-Brad-Traversy/Projects/search-github-functional/src/context/github/GithubState.jsx"],"names":["React","useReducer","axios","GithubContext","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_REPOS","GET_USER","GithubState","props","initialState","users","repos","loading","state","dispatch","GithubReducer","searchUsers","text","setLoading","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","console","log","data","items","type","payload","getUser","username","getUserRepos","clearUsers","user","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport {\n    SEARCH_USERS,\n    SET_LOADING,\n    CLEAR_USERS,\n    GET_REPOS,\n    GET_USER\n} from '../types';\n\nconst GithubState = props => {\n    const initialState = {\n        users: [],\n        users: [],\n        repos: [],\n        loading: false,\n    }\n\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n    // search users\n\n    // to find Github users according to the text entered.\n    const searchUsers = async text => {\n\n        setLoading();\n\n        const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n        console.log(res.data.items);\n\n        dispatch({ type: SEARCH_USERS, payload: res.data.items });\n    }\n\n    // get user\n    // Get a single Github users info\n\n    const getUser = async username => {\n\n        setLoading();\n\n        const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n        console.log(res.data.items);\n\n        dispatch({ type: GET_USER, payload: res.data });\n    }\n\n    // get repos\n    // Get users repos\n    const getUserRepos = async (username) => {\n\n        setLoading();\n\n        const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n        console.log(res.data.items);\n\n        dispatch({ type: GET_REPOS, payload: res.data })\n\n    }\n\n    // clear users\n    // to clear searched users from state\n    const clearUsers = () => ({ type: CLEAR_USERS });\n\n    // set loading\n    const setLoading = () => dispatch({ type: SET_LOADING });\n\n\n    return <GithubContext.Provider value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        searchUsers,\n        clearUsers,\n        getUser,\n        getUserRepos,\n    }}>\n\n        {props.children}\n\n    </GithubContext.Provider>\n}\n\nexport default GithubState;"]},"metadata":{},"sourceType":"module"}