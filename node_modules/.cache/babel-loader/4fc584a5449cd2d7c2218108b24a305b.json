{"ast":null,"code":"var _jsxFileName = \"/home/dcil20214/DCI/Online-Courses/Udemy/React-Brad-Traversy/Projects/search-github-functional/src/components/Users/search.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({\n  searchUsers,\n  showClear,\n  clearUsers,\n  setAlert\n}) => {\n  const [text, setText] = useState('');\n\n  const onSubmit = event => {\n    event.preventDefault(); // setting an alert message should the user submit an empty input\n\n    if (text === '') {\n      setAlert('Please, enter a valid search', 'light');\n    } else {\n      searchUsers(text);\n      setText('');\n      console.log(text);\n    }\n  };\n\n  const onChange = event => {\n    setText(event.target.value);\n  }; // const { showClear, clearUsers } = this.props;\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search Users...\",\n    value: text,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), showClear && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Clear\"));\n};\n\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/home/dcil20214/DCI/Online-Courses/Udemy/React-Brad-Traversy/Projects/search-github-functional/src/components/Users/search.jsx"],"names":["React","useState","PropTypes","Search","searchUsers","showClear","clearUsers","setAlert","text","setText","onSubmit","event","preventDefault","console","log","onChange","target","value","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA,UAA1B;AAAsCC,EAAAA;AAAtC,CAAD,KAAsD;AAEjE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAGA,QAAMS,QAAQ,GAAIC,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACC,cAAN,GADwB,CAExB;;AACA,QAAIJ,IAAI,KAAK,EAAb,EAAiB;AACbD,MAAAA,QAAQ,CAAC,8BAAD,EAAiC,OAAjC,CAAR;AACH,KAFD,MAEO;AACHH,MAAAA,WAAW,CAACI,IAAD,CAAX;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AAEAI,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACH;AACJ,GAXD;;AAcA,QAAMO,QAAQ,GAAIJ,KAAD,IAAW;AACxBF,IAAAA,OAAO,CAACE,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAP;AACH,GAFD,CAnBiE,CAyBjE;;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AACI,IAAA,QAAQ,EAAEP,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,iBAFhB;AAGI,IAAA,KAAK,EAAEF,IAHX;AAII,IAAA,QAAQ,EAAEO,QAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAQI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAC,QAFV;AAGI,IAAA,SAAS,EAAC,wBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,EAgBKV,SAAS,iBACN;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AACI,IAAA,OAAO,EAAEC,UADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjBR,CADJ;AA0BH,CApDD;;AAsDAH,MAAM,CAACe,SAAP,GAAmB;AACfd,EAAAA,WAAW,EAAEF,SAAS,CAACiB,IAAV,CAAeC,UADb;AAEfd,EAAAA,UAAU,EAAEJ,SAAS,CAACiB,IAAV,CAAeC,UAFZ;AAGff,EAAAA,SAAS,EAAEH,SAAS,CAACmB,IAAV,CAAeD,UAHX;AAIfb,EAAAA,QAAQ,EAAEL,SAAS,CAACiB,IAAV,CAAeC;AAJV,CAAnB;AAOA,eAAejB,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Search = ({ searchUsers, showClear, clearUsers, setAlert }) => {\n\n    const [text, setText] = useState('');\n\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        // setting an alert message should the user submit an empty input\n        if (text === '') {\n            setAlert('Please, enter a valid search', 'light')\n        } else {\n            searchUsers(text);\n            setText('');\n\n            console.log(text);\n        }\n    };\n\n\n    const onChange = (event) => {\n        setText(event.target.value)\n    }\n\n\n\n    // const { showClear, clearUsers } = this.props;\n    return (\n        <div>\n            <form className=\"form\"\n                onSubmit={onSubmit}>\n                <input type='text'\n                    name='text'\n                    placeholder='Search Users...'\n                    value={text}\n                    onChange={onChange}\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Search\"\n                    className='btn btn-dark btn-block'\n                />\n            </form>\n\n            {showClear && (\n                <button className=\"btn btn-light btn-block\"\n                    onClick={clearUsers}>Clear\n                </button>\n            )}\n\n        </div>\n    )\n\n}\n\nSearch.propTypes = {\n    searchUsers: PropTypes.func.isRequired,\n    clearUsers: PropTypes.func.isRequired,\n    showClear: PropTypes.bool.isRequired,\n    setAlert: PropTypes.func.isRequired,\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}