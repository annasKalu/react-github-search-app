{"ast":null,"code":"var _jsxFileName = \"/home/dcil20214/DCI/Online-Courses/Udemy/React-Brad-Traversy/Projects/brad-react-course1/src/components/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport '../Styles/App.css';\nimport Navbar1 from './Layout/navbar';\nimport Users from './Users/Users';\nimport User from './Users/user';\nimport { BrowserRouter as MyRouter, Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport Search from './Users/search';\nimport Alert from './Layout/alert';\nimport About from './Pages/about';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      user: {},\n      loading: false,\n      alert: null,\n      repos: []\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      console.log(res.data.items);\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.getUser = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      console.log(res.data.items);\n      this.setState({\n        user: res.data,\n        loading: false\n      });\n    };\n\n    this.getUserRepos = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      console.log(res.data.items);\n      this.setState({\n        repos: res.data,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => {\n      this.setState({\n        user: [],\n        loading: false\n      });\n    };\n\n    this.setAlert = (msg, type) => {\n      // setting an alert function to display if the input field was submitted empty\n      this.setState({\n        alert: {\n          msg,\n          type\n        }\n      }); // setting a time limit for the displayed alert to disappear.\n\n      setTimeout(() => this.setState({\n        alert: null\n      }), 5000);\n    };\n  }\n\n  render() {\n    const {\n      users,\n      user,\n      loading,\n      repos\n    } = this.state;\n    return /*#__PURE__*/React.createElement(MyRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Navbar1, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      alert: this.state.alert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        searchUsers: this.searchUsers,\n        clearUsers: this.clearUsers,\n        showClear: users.length > 0 ? true : false,\n        setAlert: this.setAlert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Users, {\n        loading: loading,\n        users: users,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/user/:login\",\n      render: props => /*#__PURE__*/React.createElement(User, Object.assign({}, props, {\n        getUser: this.getUser,\n        getUserRepos: this.getUserRepos,\n        user: user,\n        repos: repos,\n        loading: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dcil20214/DCI/Online-Courses/Udemy/React-Brad-Traversy/Projects/brad-react-course1/src/components/App.js"],"names":["React","Component","Fragment","Navbar1","Users","User","BrowserRouter","MyRouter","Switch","Route","axios","Search","Alert","About","App","state","users","user","loading","alert","repos","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","console","log","data","items","getUser","username","getUserRepos","clearUsers","setAlert","msg","type","setTimeout","render","props","length"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport '../Styles/App.css';\nimport Navbar1 from './Layout/navbar';\nimport Users from './Users/Users';\nimport User from './Users/user';\nimport { BrowserRouter as MyRouter, Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport Search from './Users/search';\nimport Alert from './Layout/alert';\nimport About from './Pages/about';\n\n\nclass App extends Component {\n\n  state = {\n    users: [],\n    user: {},\n    loading: false,\n    alert: null,\n    repos: [],\n  }\n  // async componentDidMount() {\n\n  //   this.setState({ loading: true });\n\n  //   const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n  //   console.log(res.data);\n\n  //   this.setState({ users: res.data, loading: false })\n  // }\n\n  // to find Github users according to the text entered.\n  searchUsers = async (text) => {\n\n    this.setState({ loading: true });\n\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n    console.log(res.data.items);\n\n    this.setState({ users: res.data.items, loading: false })\n  }\n\n  // Get a single Github users info\n\n  getUser = async (username) => {\n\n    this.setState({ loading: true });\n\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n    console.log(res.data.items);\n\n    this.setState({ user: res.data, loading: false })\n  }\n  // Get users repos\n  getUserRepos = async (username) => {\n\n    this.setState({ loading: true });\n\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n    console.log(res.data.items);\n\n    this.setState({ repos: res.data, loading: false })\n  }\n\n  // to clear searched users from state\n  clearUsers = () => {\n    this.setState({\n      user: [],\n      loading: false,\n    });\n  };\n\n  setAlert = (msg, type) => { // setting an alert function to display if the input field was submitted empty\n    this.setState({\n      alert: { msg, type }\n    });\n\n    // setting a time limit for the displayed alert to disappear.\n    setTimeout(() => this.setState({ alert: null }), 5000)\n\n  };\n\n  render() {\n\n    const { users, user, loading, repos } = this.state\n\n    return (\n      <MyRouter>\n\n        <div className=\"App\">\n          <div>\n            <Navbar1 />\n          </div>\n\n          <div className=\"container\">\n            <Alert alert={this.state.alert} />\n\n            <Switch>\n\n              <Route exact path='/' render={props => (\n                <Fragment>\n\n                  <Search\n                    searchUsers={this.searchUsers}\n                    clearUsers={this.clearUsers}\n                    showClear={users.length > 0 ? true : false}\n                    setAlert={this.setAlert}\n                  />\n\n                  <Users\n                    loading={loading}\n                    users={users}\n                  />\n\n                </Fragment>\n              )} />\n\n              {/* second router page*/}\n              <Route exact path='/about' component={About} /> {/*exact: is used to make sure that only the exact path is returned */}\n\n              {/* third router page*/}\n              <Route exact path='/user/:login' render={props => (\n                <User {...props}\n                  getUser={this.getUser}\n                  getUserRepos={this.getUserRepos}\n                  user={user}\n                  repos={repos}\n                  loading={loading} />\n              )} />\n            </Switch>\n            {/* <About /> */}\n\n          </div>\n\n\n        </div>\n\n      </MyRouter>\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}