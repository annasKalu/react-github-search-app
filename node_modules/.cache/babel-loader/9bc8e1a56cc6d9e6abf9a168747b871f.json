{"ast":null,"code":"var _jsxFileName = \"/home/dcil20214/DCI/Online-Courses/Udemy/React-Brad-Traversy/Projects/search-github-functional/src/context/Alert/AlertState.jsx\";\nimport React, { useReducer } from 'react';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n  const initialState = null;\n  const [state, dispatch] = useReducer(AlertReducer, initialState); // set Alert\n\n  const setAlert = (msg, type) => {\n    // setting an alert function to display if the input field was submitted empty\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type\n      }\n    }); // setting a time limit for the displayed alert to disappear.\n\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT\n    }), 5000);\n  };\n\n  return /*#__PURE__*/React.createElement(AlertContext.Provider, {\n    value: {\n      alert: state,\n      setAlert\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  }, props.children);\n};\n\nexport default AlertState;","map":{"version":3,"sources":["/home/dcil20214/DCI/Online-Courses/Udemy/React-Brad-Traversy/Projects/search-github-functional/src/context/Alert/AlertState.jsx"],"names":["React","useReducer","AlertContext","AlertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","payload","setTimeout","alert","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,UAAxC;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAMC,YAAY,GAAG,IAArB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACE,YAAD,EAAeK,YAAf,CAApC,CAHwB,CAMxB;;AACA,QAAMG,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAAE;AAC9BH,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAET,SAAR;AAAmBU,MAAAA,OAAO,EAAE;AAAEF,QAAAA,GAAF;AAAOC,QAAAA;AAAP;AAA5B,KAAD,CAAR,CAD4B,CAG5B;;AACAE,IAAAA,UAAU,CAAC,MAAML,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAf,EAAyC,IAAzC,CAAV;AAEH,GAND;;AASA,sBAAO,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AACjCW,MAAAA,KAAK,EAAEP,KAD0B;AAEjCE,MAAAA;AAFiC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMFJ,KAAK,CAACU,QANJ,CAAP;AASH,CAzBD;;AA2BA,eAAeX,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer'\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n    const initialState = null;\n\n    const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n\n    // set Alert\n    const setAlert = (msg, type) => { // setting an alert function to display if the input field was submitted empty\n        dispatch({ type: SET_ALERT, payload: { msg, type } })\n\n        // setting a time limit for the displayed alert to disappear.\n        setTimeout(() => dispatch({ type: REMOVE_ALERT }), 5000);\n\n    };\n\n\n    return <AlertContext.Provider value={{\n        alert: state,\n        setAlert,\n\n    }}>\n\n        {props.children}\n\n    </AlertContext.Provider>\n}\n\nexport default AlertState;"]},"metadata":{},"sourceType":"module"}