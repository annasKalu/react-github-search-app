{"ast":null,"code":"var _jsxFileName = \"/home/dcil20214/DCI/Online-Courses/Udemy/React-Brad-Traversy/Projects/search-github-functional/src/components/App.js\";\nimport React, { useState, Fragment } from 'react';\nimport '../Styles/App.css';\nimport Navbar1 from './Layout/navbar';\nimport Users from './Users/Users';\nimport User from './Users/user';\nimport { BrowserRouter as MyRouter, Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport Search from './Users/search';\nimport Alert from './Layout/alert';\nimport About from './Pages/about';\nimport GithubState from '../context/github/GithubState';\n\nconst App = () => {\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState([]); // async componentDidMount() {\n  //   this.setState({ loading: true });\n  //   const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n  //   console.log(res.data);\n  //   this.setState({ users: res.data, loading: false })\n  // }\n  // Get users repos\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    console.log(res.data.items);\n    setRepos(res.data);\n    setLoading(true);\n  };\n\n  const showAlert = (msg, type) => {\n    // setting an alert function to display if the input field was submitted empty\n    setAlert({\n      msg,\n      type\n    }); // setting a time limit for the displayed alert to disappear.\n\n    setTimeout(() => setAlert(null), 5000);\n  }; //const { users, user, loading, repos } = this.state\n\n\n  return /*#__PURE__*/React.createElement(GithubState, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MyRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Navbar1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      setAlert: showAlert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Users, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: About,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }), \" \", /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/user/:login\",\n    render: props => /*#__PURE__*/React.createElement(User, Object.assign({}, props, {\n      getUserRepos: getUserRepos,\n      repos: repos,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/dcil20214/DCI/Online-Courses/Udemy/React-Brad-Traversy/Projects/search-github-functional/src/components/App.js"],"names":["React","useState","Fragment","Navbar1","Users","User","BrowserRouter","MyRouter","Switch","Route","axios","Search","Alert","About","GithubState","App","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","getUserRepos","username","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","console","log","data","items","showAlert","msg","type","setTimeout","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAO,mBAAP;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,aAAa,IAAIC,QAA1B,EAAoCC,MAApC,EAA4CC,KAA5C,QAAyD,kBAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAKA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC,CALgB,CAOhB;AAEA;AAEA;AACA;AAEA;AACA;AACA;;AACA,QAAMuB,YAAY,GAAG,MAAOC,QAAP,IAAoB;AAEvCJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMK,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,gCAA+BF,QAAS,gDAA+CG,OAAO,CAACC,GAAR,CAAYC,0BAA2B,kBAAiBF,OAAO,CAACC,GAAR,CAAYE,8BAA+B,EAArM,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACQ,IAAJ,CAASC,KAArB;AAEAhB,IAAAA,QAAQ,CAACO,GAAG,CAACQ,IAAL,CAAR;AACAb,IAAAA,UAAU,CAAC,IAAD,CAAV;AAED,GAVD;;AAYA,QAAMe,SAAS,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAAE;AACjCf,IAAAA,QAAQ,CAAC;AAAEc,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAD,CAAR,CAD+B,CAG/B;;AACAC,IAAAA,UAAU,CAAC,MAAMhB,QAAQ,CAAC,IAAD,CAAf,EAAuB,IAAvB,CAAV;AAED,GAND,CA7BgB,CAuChB;;;AAEA,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,MAAM,EAAEkB,KAAK,iBACjC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAEJ,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAeE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEvB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,oBAkBE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,cAAlB;AAAiC,IAAA,MAAM,EAAE2B,KAAK,iBAC5C,oBAAC,IAAD,oBAAUA,KAAV;AACE,MAAA,YAAY,EAAEhB,YADhB;AAEE,MAAA,KAAK,EAAEN,KAFT;AAGE,MAAA,OAAO,EAAEE,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CAHF,CALF,CAFF,CAJF,CADF;AAoDD,CA7FD;;AA+FA,eAAeL,GAAf","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport '../Styles/App.css';\nimport Navbar1 from './Layout/navbar';\nimport Users from './Users/Users';\nimport User from './Users/user';\nimport { BrowserRouter as MyRouter, Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport Search from './Users/search';\nimport Alert from './Layout/alert';\nimport About from './Pages/about';\nimport GithubState from '../context/github/GithubState';\n\n\n\n\nconst App = () => {\n\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState([]);\n\n  // async componentDidMount() {\n\n  //   this.setState({ loading: true });\n\n  //   const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n  //   console.log(res.data);\n\n  //   this.setState({ users: res.data, loading: false })\n  // }\n  // Get users repos\n  const getUserRepos = async (username) => {\n\n    setLoading(true);\n\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n    console.log(res.data.items);\n\n    setRepos(res.data);\n    setLoading(true);\n\n  }\n\n  const showAlert = (msg, type) => { // setting an alert function to display if the input field was submitted empty\n    setAlert({ msg, type });\n\n    // setting a time limit for the displayed alert to disappear.\n    setTimeout(() => setAlert(null), 5000);\n\n  };\n\n\n\n  //const { users, user, loading, repos } = this.state\n\n  return (\n    <GithubState>\n\n\n\n      <MyRouter>\n\n        <div className=\"App\">\n          <div>\n            <Navbar1 />\n          </div>\n\n          <div className=\"container\">\n            <Alert alert={alert} />\n\n            <Switch>\n\n              <Route exact path='/' render={props => (\n                <Fragment>\n                  <Search\n                    setAlert={showAlert}\n                  />\n\n                  <Users />\n\n\n                </Fragment>\n              )} />\n\n              {/* second router page*/}\n              <Route exact path='/about' component={About} /> {/*exact: is used to make sure that only the exact path is returned */}\n\n              {/* third router page*/}\n              <Route exact path='/user/:login' render={props => (\n                <User {...props}\n                  getUserRepos={getUserRepos}\n                  repos={repos}\n                  loading={loading} />\n              )} />\n            </Switch>\n            {/* <About /> */}\n\n          </div>\n\n\n        </div>\n\n      </MyRouter>\n    </GithubState>\n\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}