{"ast":null,"code":"import React,{useEffect,Fragment,useContext}from'react';import Repos from'../repos/repos';import Spinner from'../Layout/spinner';import{Link}from'react-router-dom';import GithubContext from'../../context/github/githubContext';var User=function User(_ref){var match=_ref.match;var githubContext=useContext(GithubContext);var user=githubContext.user,loading=githubContext.loading,getUser=githubContext.getUser,getUserRepos=githubContext.getUserRepos,repos=githubContext.repos;useEffect(function(){getUser(match.params.login);getUserRepos(match.params.login);//eslint-disable-next-line\n},[]);var name=user.name,avatar_url=user.avatar_url,location=user.location,bio=user.bio,blog=user.blog,login=user.login,html_url=user.html_url,followers=user.followers,following=user.following,public_repos=user.public_repos,public_gists=user.public_gists,hireable=user.hireable,company=user.company;if(loading){return/*#__PURE__*/React.createElement(Spinner,null);}return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Link,{to:\"/\",className:\"btn btn-light\"},\"Back To Search\"),\"Hireable: \",' ',hireable?/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-check text-success\"}):/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-times-circle text-danger\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"card grid-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"all-center\"},/*#__PURE__*/React.createElement(\"img\",{src:avatar_url,className:\"round-img\",alt:\"\",style:{width:'150px'}}),/*#__PURE__*/React.createElement(\"h1\",null,name),/*#__PURE__*/React.createElement(\"p\",null,\"Location: \",location)),/*#__PURE__*/React.createElement(\"div\",null,bio&&/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"h3\",null,\"Bio\"),/*#__PURE__*/React.createElement(\"p\",null,bio)),/*#__PURE__*/React.createElement(\"a\",{href:html_url,className:\"btn btn-dark my-1\"},\"Visit Github Profile\"),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,login&&/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"strong\",null,\"Username: \"),\" \",login)),/*#__PURE__*/React.createElement(\"li\",null,company&&/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"strong\",null,\"Company: \"),\" \",company)),/*#__PURE__*/React.createElement(\"li\",null,blog&&/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"strong\",null,\"Website: \"),\" \",blog))))),/*#__PURE__*/React.createElement(\"div\",{className:\"card text-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"badge badge-primary\"},\"Followers: \",followers),/*#__PURE__*/React.createElement(\"div\",{className:\"badge badge-success\"},\"Following: \",following),/*#__PURE__*/React.createElement(\"div\",{className:\"badge badge-light\"},\"Public Repos: \",public_repos),/*#__PURE__*/React.createElement(\"div\",{className:\"badge badge-dark\"},\"Public Gists: \",public_gists)),/*#__PURE__*/React.createElement(Repos,{repos:repos}));};export default User;","map":{"version":3,"sources":["/home/dcil20214/DCI/Online-Courses/Udemy/React-Brad-Traversy/Projects/search-github-functional/src/components/Users/user.jsx"],"names":["React","useEffect","Fragment","useContext","Repos","Spinner","Link","GithubContext","User","match","githubContext","user","loading","getUser","getUserRepos","repos","params","login","name","avatar_url","location","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","company","width"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment, useContext } from 'react';\nimport Repos from '../repos/repos';\nimport Spinner from '../Layout/spinner';\nimport { Link } from 'react-router-dom';\nimport GithubContext from '../../context/github/githubContext';\n\n\n\nconst User = ({ match }) => {\n    const githubContext = useContext(GithubContext);\n\n\n    const { user, loading, getUser, getUserRepos,\n        repos } = githubContext;\n\n    useEffect(() => {\n        getUser(match.params.login);\n        getUserRepos(match.params.login);\n        //eslint-disable-next-line\n    }, []);\n\n\n    const {\n        name,\n        avatar_url,\n        location,\n        bio,\n        blog,\n        login,\n        html_url,\n        followers,\n        following,\n        public_repos,\n        public_gists,\n        hireable,\n        company,\n    } = user;\n\n\n\n    if (loading) {\n        return <Spinner />\n    }\n    return (\n        <Fragment>\n            <Link to='/' className='btn btn-light'>\n                Back To Search\n                </Link>\n                Hireable: {' '}\n            {hireable ? (<i className='fa fa-check text-success' />) : (<i className='fa fa-times-circle text-danger' />)\n            }\n\n            <div className='card grid-2'>\n                <div className=\"all-center\">\n                    <img\n                        src={avatar_url}\n                        className='round-img'\n                        alt=\"\"\n                        style={{ width: '150px' }}\n                    />\n                    <h1>{name}</h1>\n                    <p>Location: {location}</p>\n\n                </div>\n                <div>\n                    {bio && (<Fragment>\n                        <h3>Bio</h3>\n                        <p>{bio}</p>\n                    </Fragment>\n                    )}\n                    <a href={html_url} className='btn btn-dark my-1'>\n                        Visit Github Profile\n                        </a>\n                    <ul>\n                        <li>\n                            {login && <Fragment>\n                                <strong>Username: </strong> {login}\n                            </Fragment>}\n                        </li>\n\n                        <li>\n                            {company && <Fragment>\n                                <strong>Company: </strong> {company}\n                            </Fragment>}\n                        </li>\n\n                        <li>\n                            {blog && (<Fragment>\n                                <strong>Website: </strong> {blog}\n                            </Fragment>\n                            )}\n                        </li>\n                    </ul>\n                </div>\n\n            </div>\n\n            <div className=\"card text-center\">\n                <div className=\"badge badge-primary\">Followers: {followers}\n                </div>\n                <div className=\"badge badge-success\">Following: {following}\n                </div>\n                <div className=\"badge badge-light\">Public Repos: {public_repos}\n                </div>\n                <div className=\"badge badge-dark\">Public Gists: {public_gists}\n                </div>\n            </div>\n            <Repos repos={repos} />\n        </Fragment>\n    );\n\n}\n\n\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}